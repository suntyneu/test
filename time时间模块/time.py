"""

UTC(世界协调世界）：格林尼治天文时间，世界标准世界，中国是UTC+8
DST(夏令时)：夏季时间调快一个小时

时间的表示形式：
1、时间戳：以整形或浮点型表示时间的一个以秒为单位的时间间隔
        这个间隔的基础值是从1970年1月1日零点开始算起有多少秒。

2、元组：一种python的数据结构表示，这个元组有9个整形内容。
year
month
hours
minutes
seconds
weekday

flag (1或-1 或 0） 1：夏令时 0：正常时间、

3、格式化字符串
python中时间日期格式化符号：
%y 两位数的年份表示（00-99）
%Y 四位数的年份表示（000-9999）
%m 月份（01-12）
%d 月内中的一天（0-31）
%H 24小时制小时数（0-23）
%I 12小时制小时数（01-12）
%M 分钟数（00=59）
%S 秒（00-59）

%f 毫秒（000000-999999）


%a 本地简化星期名称
%A 本地完整星期名称
%b 本地简化的月份名称
%B 本地完整的月份名称
%c 本地相应的日期表示和时间表示
%j 年内的一天（001-366）
%p 本地A.M.或P.M.的等价符
%U 一年中的星期数（00-53）星期天为星期的开始
%w 星期（0-6），星期天为星期的开始
%W 一年中的星期数（00-53）星期一为星期的开始
%x 本地相应的日期表示
%X 本地相应的时间表示
%Z 当前时区的名称
%% %号本身
"""
import time

c = time.time()  # 返回当前时间的时间戳，浮点数形式，格林尼治时间
print(c)
t = time.gmtime(c)
print(t)

b = time.localtime(c)  # 将时间戳转为本地时间元组
print(b)

m = time.mktime(b)  # 将本地时间元组转换成时间戳
print(m)

s = time.asctime()  # 将时间元组转换成字符串
print(s)

p = time.ctime(c)
print(p)            # 将时间戳转换成字符串

# 将时间元组转换成给定格式的字符串，参数b为时间元组，没有默认当前时间
aa = time.strftime("%Y-%m-%d %X", b)
print(aa)

# 将时间字符串换成时间元组
w = time.strptime(aa, "%Y-%m-%d %X")
print(w)

# 延迟一个时间,整形或者浮点
time.sleep(4)

# 返回当前程序的cpu执行时间：unix返回全部运行的时间。
# windows从第二次开始，都是以第一个调用此函数开始的时间戳作为基数。
time.clock()

sum = 0
for i in range(1000):
    sum += i
print(time.clock())
